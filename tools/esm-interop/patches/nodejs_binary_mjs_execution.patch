diff --git internal/node/node.bzl internal/node/node.bzl
index 3b8ce74..2e643cc 100755
--- internal/node/node.bzl
+++ internal/node/node.bzl
@@ -93,7 +93,7 @@ def _write_require_patch_script(ctx, data, node_modules_root):
         is_executable = True,
     )

-def _ts_to_js(entry_point_path):
+def _ts_to_js(ctx, entry_point_path):
     """If the entry point specified is a typescript file then set it to .js.

     Workaround for #1974
@@ -103,7 +103,12 @@ def _ts_to_js(entry_point_path):
         entry_point_path: a file path
     """
     if entry_point_path.endswith(".ts"):
-        return entry_point_path[:-3] + ".js"
+        if ctx.attr.use_esm:
+            ext = ".mjs"
+        else:
+            ext = ".js"
+
+        return entry_point_path[:-3] + ext
     elif entry_point_path.endswith(".tsx"):
         return entry_point_path[:-4] + ".js"
     return entry_point_path
@@ -333,8 +338,8 @@ if (process.cwd() !== __dirname) {
     #else:
     #    substitutions["TEMPLATED_script_path"] = "$(rlocation \"%s\")" % _to_manifest_path(ctx, ctx.file.entry_point)
     # For now we need to look in both places
-    substitutions["TEMPLATED_entry_point_execroot_path"] = "\"%s\"" % _ts_to_js(_to_execroot_path(ctx, _get_entry_point_file(ctx)))
-    substitutions["TEMPLATED_entry_point_manifest_path"] = "$(rlocation \"%s\")" % _ts_to_js(_to_manifest_path(ctx, _get_entry_point_file(ctx)))
+    substitutions["TEMPLATED_entry_point_execroot_path"] = "\"%s\"" % _ts_to_js(ctx, _to_execroot_path(ctx, _get_entry_point_file(ctx)))
+    substitutions["TEMPLATED_entry_point_manifest_path"] = "$(rlocation \"%s\")" % _ts_to_js(ctx, _to_manifest_path(ctx, _get_entry_point_file(ctx)))
     if DirectoryFilePathInfo in ctx.attr.entry_point:
         substitutions["TEMPLATED_entry_point_main"] = ctx.attr.entry_point[DirectoryFilePathInfo].path
     else:
@@ -355,7 +360,7 @@ if (process.cwd() !== __dirname) {

     # Note: `to_list()` is expensive and should only be called once.
     sources_list = sources.to_list()
-    entry_point_input_short_path = _ts_to_js(_get_entry_point_file(ctx).short_path)
+    entry_point_input_short_path = _ts_to_js(ctx, _get_entry_point_file(ctx).short_path)
     entry_point_script = None

     for f in sources_list:
@@ -631,6 +636,7 @@ Predefined genrule variables are not supported in this context.
         ],
         allow_files = True,
     ),
+    "use_esm": attr.bool(default = False),
 }

 _NODEJS_EXECUTABLE_OUTPUTS = {
