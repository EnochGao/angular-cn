load("//tools:defaults.bzl", "ts_config", "ts_library")

package(default_visibility = ["//visibility:public"])

exports_files([
    "tsconfig-build.json",
    "tsconfig.json",
])

ts_library(
    name = "types",
    srcs = glob(["*.ts"]),
    deps = [
        "//packages/zone.js/lib:zone_d_ts",
        "@npm//@types/hammerjs",
    ],
)

ts_config(
    name = "tsconfig-test",
    src = "tsconfig-test.json",
    deps = [":tsconfig-build.json"],
)

ts_config(
    name = "tsec_config",
    src = "tsconfig-tsec-base.json",
    deps = [
        ":tsconfig-build.json",
        ":tsec-exemption.json",
    ],
)

exports_files([
    "license-banner.txt",
    "README.md",
    "examples",
])

# Run the following command to regenerate this list of all files_for_docgen targets.
# bazel query 'attr("name", "files_for_docgen", //packages/... -//packages:files_for_docgen)' --output=label 2> /dev/null | sort | sed -e "s/\(.*\)/\"\1\",/"
filegroup(
    name = "files_for_docgen",
    srcs = [
        "//packages/animations:files_for_docgen",
        "//packages/animations/browser:files_for_docgen",
        "//packages/animations/browser/testing:files_for_docgen",
        "//packages/common:files_for_docgen",
        "//packages/common/http:files_for_docgen",
        "//packages/common/http/testing:files_for_docgen",
        "//packages/common/testing:files_for_docgen",
        "//packages/common/upgrade:files_for_docgen",
        "//packages/core:files_for_docgen",
        "//packages/core/src/compiler:files_for_docgen",
        "//packages/core/src/di/interface:files_for_docgen",
        "//packages/core/src/interface:files_for_docgen",
        "//packages/core/src/reflection:files_for_docgen",
        "//packages/core/src/util:files_for_docgen",
        "//packages/core/testing:files_for_docgen",
        "//packages/elements:files_for_docgen",
        "//packages/examples/common:files_for_docgen",
        "//packages/examples/core:files_for_docgen",
        "//packages/examples/core/di/ts/forward_ref:files_for_docgen",
        "//packages/examples/core/testing/ts:files_for_docgen",
        "//packages/examples/forms:files_for_docgen",
        "//packages/examples/platform-browser:files_for_docgen",
        "//packages/examples/router/activated-route:files_for_docgen",
        "//packages/examples/service-worker/push:files_for_docgen",
        "//packages/examples/service-worker/registration-options:files_for_docgen",
        "//packages/examples/test-utils:files_for_docgen",
        "//packages/examples/testing:files_for_docgen",
        "//packages/examples/upgrade/static/ts/full:files_for_docgen",
        "//packages/examples/upgrade/static/ts/lite:files_for_docgen",
        "//packages/examples/upgrade/static/ts/lite-multi:files_for_docgen",
        "//packages/examples/upgrade/static/ts/lite-multi-shared:files_for_docgen",
        "//packages/forms:files_for_docgen",
        "//packages/localize:files_for_docgen",
        "//packages/localize/init:files_for_docgen",
        "//packages/localize/src/localize:files_for_docgen",
        "//packages/localize/src/utils:files_for_docgen",
        "//packages/platform-browser:files_for_docgen",
        "//packages/platform-browser-dynamic:files_for_docgen",
        "//packages/platform-browser-dynamic/testing:files_for_docgen",
        "//packages/platform-browser/animations:files_for_docgen",
        "//packages/platform-browser/testing:files_for_docgen",
        "//packages/platform-server:files_for_docgen",
        "//packages/platform-server/init:files_for_docgen",
        "//packages/platform-server/testing:files_for_docgen",
        "//packages/router:files_for_docgen",
        "//packages/router/testing:files_for_docgen",
        "//packages/router/upgrade:files_for_docgen",
        "//packages/service-worker:files_for_docgen",
        "//packages/upgrade:files_for_docgen",
        "//packages/upgrade/src/common:files_for_docgen",
        "//packages/upgrade/static:files_for_docgen",
        "//packages/upgrade/static/testing:files_for_docgen",
    ],
)
